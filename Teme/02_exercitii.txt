1. write a function to return the n character from a string
	var nume = "Vlad"
	function ncharacter(n) { return nume.charAt(n)};



2. WAF (write a function), with 1 parameter x ,  WR (which returns) the char code of character from position x
	var nume = "Vlad"
	function xchar(x) { return nume.charCodeAt(x)};

3. WAF with 2 params x and y, WR the sum of charcodes from position x and y
	function sumchar(x,y) { return nume.charCodeAt(x) + nume.charCodeAt(y)}

4. ?? WAF with 2 params, input (string), x(number), WR the same string with the character from position x as uppercase;
	var str = 'hello'
	function capital(x){ return srt.charAt(x).toUpperCase + string.slice(x)}
	var x = find(x)
	function capital(str,x) { return x.toUpperCase + 

5. WAF, (string 1, string 2), WR the indexof string 2 within string 1;

	var str1 = 'hello all'
	var str2 = 'world is mine' 
	function change(n) { return str1 + str2.indexOf(n)}

	SAU 
	var str1 = "Welcome home" 
	var str2 = "home" 
	function whereRU() { return str1.indexOf(str2)}

	

6. WAF, (string 1, string 2), WR the last indexof string 2 within string 1;

	var str1 = "Welcome home" 
	var str2 = "home" 
	function whereRU(str2) { return str1.LastIndexOf(str2)}


7. WAF, (string) , WR the first 2 characters

	var str = "Welcome" 
	function first2() { return str.substr(0,2)}

	
8. WAF, (string), WR the characters from position 1 and -1 (previous character from last one)
	var str = 'welcome'
	function MyFunction() {return str.substr(0,1) + str.substr(-1)}
	
	
9. WAF, (string, start, end), WR the characters between (start and end)

	var str = 'welcome' 
	function Between() {return str.substring(1,7)}
	SAU 
	var str = 'welcome' 
	var n = str.length 
	function Between() {return str.substring(1,n)}	

10. WAF (string1, string2), to replace the string2 within string1;

	var str1 = 'Hello people' 
	function str2(string) { return str1.replace('Hello',string)}


11. WAF(string), WR true if the length is even. (%2 === 0)
	var str = 'welcome' 
	function even(string) { return str.length%2 === 0}


12. WAF(string1, s2), WR the sum of lengths of s1 and s2;

	var str1 = "Bine ati venit "
	var str2 = "Bine v-am gasit" 
	function sumstring(str1,str2) { return str1.length + str2.length }

13. WAF(string1, s2), WR true if s1 starts with s2;
	var str1 = "Bine ati venit "
	var str2 = "Bine v-am gasit" 
	function startstring(str1,str2) { return str1.startsWith(str2) }
SAU 
	function startstring(str1,string) {return str1.startsWith(string)}
	

14.WAF(string, number) to remove the character from position number using slice

	var str = 'hello'
	function remove(n) { return str.slice(0,n) + str.slice(n+1) }

SAU (formula mai generala)
	function remove(string,n) { return string.slice(0,n) + string.slice(n+1)}

15.WAF (string, string) WR the number of aparition of string 2 whithin string1.

	var str1 = 'hello' 
	var str2 = 'l'
	function findme(str2) { return str1.match(/str2/gi)}
SAU 	var res = str1.match(/l/gi)


16. create an array
	arr1 = ['a','b','c']

17. WAF to add a string into array
	arr1 = ['a','b','c']
	function Myadd (p) { return arr1.push(p) } 

	
18. WAF (arr, string) to add string into array on position 0;

	arr1 = ['a','b','c']
	function Myadd (p) { return arr1.unshift(p) } 

19. WAF (arr, number) to add the number into array
	arr1 = ['a','b','c']
	function MyaddNR (p) { return arr1.splice(0,0,p) } 
	
20; WAF (arr) WR the last element from array

	arr1 = ['a','b','c']
	function LastItem () { return arr1.slice(-1) }

21; WAF (string) WR the characters from string as array

	str1 = "Hello" 
	function StrtoArr (){ return str1.split("")}

22. WAF (arr) WR the reversed array 
	arr1 = ['a','b','c']
	function Rev() { return arr1.reverse()}

23. WAF (string) to return the inversed string. ex: abc ==> cba
	str1 = 'abc'
	function reverse(str1){return str1.split("").reverse().join("");}
	
24. WAF (arr, x) to remove the value from position x from array
	arr1 = ['a','b','c']
	function remX(x) { return arr1.splice(x,1)}
	
25. WAF (arr, x) WR true if there is any value equal x into the array
	arr1 = [1,'b',3]
	function check(x) {return arr1.includes(x)}
	
26. WAF (arr, y) WR an array containing all the values except y
	arr1 = [1,2,3,4,5]
	function  ???


27. WAF (arr) of numbers which returns the sorted array;
	arr1 = [1,2,3,4,5]
	function MyFunction() {arr1.sort(function(a,b){return a-b})}

28. WAF (arr) WR the rotated array (1 time)
	arr1 = [1,2,3,4,5]
	function Rev() {return arr1.reverse()}

29. WAF (arr) of numbers WR another array which contains the squared values; [1,2,3] ==> [1,4,9]
	arr1 = [1,2,3]
	var result1 = arr1.map(function(el) {return el*el})

30. WAF (r: number) WR the  surface of a circle having the raduis equal r;
	function Circle(r) {return 3.14*r*r + " cm"}

31. WAF (arr) which prints to the console the value from the array (one by one)
	arr1 = [1,2,3]
	var result = arr1.forEach(MyFunction);
function MyFunction(item) {return console.log(item)}

32. WAF writeToConsole(value) which prints the value to the console;
	function writeToConsole(value) {return console.log(value)}

33. WAF (arr1, arr2) which returns another array with elements from arr1 and arr2;
	arr1 = [1,2,3]
	arr2 = [4,5,6]
	function Bind() {return arr1.concat(arr2)};
	
34; WAF (arr, position) (arr) contains strings, which replace the element from position x with the inversed value; ex: ['ana', 'xy'], 1 ==> ["ana", "yx"]
	arr = ['ana','xy']
	item = function pozitie(x) {return arr[x]}


35. WAF: (arr, value) WR the position of value into the array
	arr = ["a","b","c"]
	var result = function pozitie(value) {return arr.indexOf(value)}
	function Swap(value, result) {return arr.splice(result,1,result)}

36. WAF (n) which returns an array with n elements
	arr = [1,2,3,4,5,6,7,8]
	function RetN(x) {return arr.slice(0,x)}

37. WAF(string) WR string withowt spaces. ex: "    a    bcd   xyzt    " ==> "abcdxyzt";
	str = "    a    bcd   xyzt    "
	function MyFunction() {return str.split(" ").join("")}

38. WAF (X) which returns true if x is array
	function Check(arr) {return Array.isArray(arr)}

39. WAF (y) which returns true if y is string;
	function isString(arr) {return typeof arr === 'string'}

40. WAF (string, number) which returns the string + number
	function Merge(string,x) {return string+x}

41. WAF WR the inverse value; suppose you have a door; write a function which toggle the state door. isOPEN/isClosed
	Open = 1
	Closed = 0 
	door = pushhandle()
	function State(door) {return door === isOpen }
	function pushhandle() {return door === Open }




42. WAF WR the number of miliseconds of your life;
	dat = new Date("1986 12 July")
Sat Jul 12 1986 00:00:00 GMT+0300 (Eastern European Summer Time)
function Time(x) {return dat.getTime(x)}

43. WAF WR current date + 2h
	date = new Date()
	function Plus() { return date.setHours(date.getHours()+2)}

44. WAF WR day of the week of the current date
	var d = new Date()
	var weekday = new Array(7);
  		weekday[0] = "Sunday";
  		weekday[1] = "Monday";
  		weekday[2] = "Tuesday";
  		weekday[3] = "Wednesday";
  		weekday[4] = "Thursday";
  		weekday[5] = "Friday";
  		weekday[6] = "Saturday";
	function Day() {return weekday[d.getDay()] }

45. WAF WR 	 the difference between 2 dates



